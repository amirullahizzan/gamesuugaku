
----------------------------------------------------------------------
ゲーム数学１　課題　プレイヤーの周りのオプション
----------------------------------------------------------------------

提出期限：１時間後（できているところまでの提出で構いません、そのあと解説していきます）
提出場所：teams->ゲーム数学１->授業（本日）->ファイル->提出

プロジェクトフォルダの名前を【 プロジェクト名_番号_自分の名前 】のように変更して提出してください。
（例えば【 ゲーム数学１_課題00_00000000_○○○○○ 】みたいな感じで）

以下の変更を実装することで【 こういう感じで.exe 】のような挙動になるようにしてください。


課題１：プレイヤー周りのオプションを増やして配置する

	「こういう感じで.exe」では６個配置しています。
	なのでオプション数を変更する必要があります

	↓現状は以下のようになっています
	#define OPTION_MAX		4

	で、その数に合わせてオプションをどれだけずらすかの角度も変更する必要があります。
	（現状は４つの配置で９０度ずらしています：１周３６０度）


課題２：オプションをプレイヤーの周りで回転させる

	そのためには、現状使っているプレイヤーの向き（ player_rot ）とは別に
	基準の角度（回転角度を足していく）用の変数が必要です。
	（例えば base_rot みたいな）

	その基準の角度を常に足していきます。

	そして、現状はプレイヤーの向きに対して一定角度を足している処理を、その基準の角度に対しておこないます。


課題３：左シフトキーでオプションの距離の変更

	現状は左シフトキーを押している時とそうでない時でオプションの距離を直接指定しています。

	↓　現状はこんな感じで
	if( CheckHitKey( KEY_INPUT_LSHIFT ) ){
		base_length = LENGTH_FAR;
	}else{
		base_length = LENGTH_NEAR;
	}

	この処理を、
	左シフトキーを押している時　：距離（ base_length ）を徐々に増やす（遠い距離（ LENGTH_FAR  ）で止める）
	左シフトキーを押していない時：距離（ base_length ）を徐々に減らす（近い距離（ LENGTH_NEAR ）で止める）
	ように実装することで、	「こういう感じで.exe」のような動きになるような変更します。


ちなみに
	画面サイズ　　　　　　８００ｘ４５０
	player.bmp　　　　　　　５０ｘ　５０
	option.bmp　　　　　　　３０ｘ　３０
です。


各処理に関して、既に宣言してある変数や関数だけでは処理が実装できない場合、
各自で変数や関数を追加した上で実装をおこなってください。
座標や色・スピードなど細かい数値の指定は特にないので、各自でいい感じの数値を設定することで
【 こういう感じで.exe 】のような動きになるように実装してください。
