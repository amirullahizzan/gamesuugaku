
----------------------------------------------------------------------
ゲーム数学１　課題　円同士の当たり判定
----------------------------------------------------------------------

提出期限：１時間後（できているところまでの提出で構いません、そのあと解説していきます）
提出場所：teams->ゲーム数学１->授業（本日）->ファイル->提出

プロジェクトフォルダの名前を【 プロジェクト名_番号_自分の名前 】のように変更して提出してください。
（例えば【 ゲーム数学１_課題00_00000000_○○○○○ 】みたいな感じで）

以下の変更を実装することで【 こういう感じで.exe 】のような挙動になるようにしてください。


課題１：ＮＰＣを複数にする

	そのためには、ＮＰＣの座標変数などを配列で宣言する必要があります。
	配列の処理をするために、それぞれをループを使って実装します。

	一応、ＮＰＣの最大数用の定数は用意しています。

	//	ＮＰＣの数
	#define NPC_MAX		10


課題２：ＮＰＣと当たったところから円を徐々に大きく

	現状のミサイル円は常に同じ半径（ MISSILE_RADIUS ）で表示されています。
	（現状は定数のまま固定になっています：#define MISSILE_RADIUS	10.0f）
	その円の半径をＮＰＣと当たったところから円を大きくしていきます。

	そのためには、ミサイルの半径用の変数が必要です。（例えば：float missile_radius; みたいな）

	で、一定の大きさになったら元の大きさ（ MISSILE_RADIUS ）に戻して座標も開始位置にします。

	（こういう感じで.exe では半径（ missile_radius ）を 200.0f まで大きくしています）

	現状は、missile_mode が
	【０：上下キーで移動】
	【１：横に飛んでいく】
	になっていますが、さらに、
	【２：その場で半径を大きくする】←これ
	を追加する感じになります。

	さらに、大きくなる時の円の描画は枠だけにしています。（なんとなく広がっている感を出すために）

	枠だけの円の描画
	DrawCircle( Ｘ座標, Ｙ座標, 半径, 色, FALSE );
	（関数の一番最後に FALSE を入れます）


ちなみに
	画面サイズ　　　　　　８００ｘ４５０
です。


各処理に関して、既に宣言してある変数や関数だけでは処理が実装できない場合、
各自で変数や関数を追加した上で実装をおこなってください。
座標や色・スピードなど細かい数値の指定は特にないので、各自でいい感じの数値を設定することで
【 こういう感じで.exe 】のような動きになるように実装してください。
